<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<title>WFP Dashboard Display</title>
<style>
  html, body {
    margin: 0; padding: 0;
    height: 100%; width: 100%;
    background: #000; overflow: hidden;
    font-family: system-ui, Arial, sans-serif;
  }
  #stage {
    position: absolute; inset: 0;
    display: grid; place-items: center;
    background: #000;
  }
  object.kiosk {
    width: 100%; height: 100%;
    border: 0; display: block;
    opacity: 0; transition: opacity .8s ease;
    max-width: 100vw; max-height: 100vh;
  }
  object.kiosk.ready { opacity: 1; }
  #loading {
    position: absolute; inset: 0;
    display: grid; place-items: center;
    color: #ccc; font-size: 18px;
    background: rgba(0,0,0,.35);
    pointer-events: none;
  }
  #loading .dot { animation: blink 1.4s infinite both; }
  #loading .dot:nth-child(2){ animation-delay:.2s }
  #loading .dot:nth-child(3){ animation-delay:.4s }
  @keyframes blink { 0%,80%,100%{opacity:.2} 40%{opacity:1} }
</style>
</head>
<body>
<div id="stage"></div>
<div id="loading">Loading<span class="dot">.</span><span class="dot">.</span><span class="dot">.</span></div>

<script>
  // Поставь свои URL
  const urls = [
    "https://analytics.wfp.org/t/Public/views/TajikistanMarketUpdate_September15-21_2025/TajikistanMarketPriceUpdate?:embed=y&:toolbar=no&:tabs=no",
    "https://storymaps.arcgis.com/stories/348d00cd34bb45b4897abcf14a7b329e",
    "https://unwfp.maps.arcgis.com/apps/Cascade/index.html?appid=1e262af203064241b087c64a7a399d35",
    "https://analytics.wfp.org/#/views/Processmonitoring-Dashboard/Dashboard_PM?:embed=y&:toolbar=no",
    "https://analytics.wfp.org/t/Public/views/CCARB-ActivitiesTargetingandMonitoring/CCARB-ActivitiesTargetingandMonitoring?:embed=y&:toolbar=no",
    "https://analytics.wfp.org/#/views/CFMDashboardTajikistan/Overview?:embed=y"
  ];

  const ROTATE_MS = 60000;   // интервал ротации
  const LOAD_TIMEOUT = 15000; // если не загрузилось за 15с — скипаем к следующему

  const stage = document.getElementById('stage');
  const loading = document.getElementById('loading');
  let idx = 0, rotTimer = null, watchdog = null;

  function showLoader(v){ loading.style.display = v ? 'grid' : 'none'; }

  function swapTo(url){
    // Лоадер + новый <object>
    showLoader(true);
    clearTimeout(watchdog);

    const obj = document.createElement('object');
    obj.className = 'kiosk';
    obj.type = 'text/html';
    obj.data = url;

    // Когда загрузилось — плавно показать и убрать старый
    obj.addEventListener('load', () => {
      // небольшая задержка, чтобы контент успел прорендериться
      requestAnimationFrame(() => obj.classList.add('ready'));
      showLoader(false);
      // удалить предыдущий объект (если был)
      [...stage.children].forEach(el => { if (el !== obj) stage.removeChild(el); });
    });

    // Watchdog: если страница блокирует встраивание — пропускаем
    watchdog = setTimeout(() => {
      // удалить «битый» объект и перейти дальше
      if (stage.contains(obj)) stage.removeChild(obj);
      next(true); // форсируем переход
    }, LOAD_TIMEOUT);

    // Вставить наверх (снизу удалим старый в onload)
    stage.appendChild(obj);
  }

  function next(force = false){
    if (!force && rotTimer) clearTimeout(rotTimer);
    const url = urls[idx];
    idx = (idx + 1) % urls.length;
    swapTo(url);
    rotTimer = setTimeout(next, ROTATE_MS);
  }

  // Старт
  next(true);

  // На всякий — при изменении окна некоторые движки перерисовывают object
  addEventListener('resize', () => {
    // Ничего не делаем: object на 100% сам подстроится
  });
</script>
</body>
</html>
